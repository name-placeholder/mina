kind: pipeline
name: build-image
type: docker
clone:
  disable: true
trigger:
  event:
  - cron
  cron:
  - hourly
environment:
  MINA_BRANCH: release/2.0.0
steps:
- name: clone
  image: alpine/git
  commands:
  - '[[ ! -n "${MINA_IMAGE}" ]] && echo "Continue" || exit 78'
  - git clone https://github.com/MinaProtocol/mina.git .
  - git checkout $${MINA_BRANCH}
  - cat ./dockerfiles/stages/1-build-deps ./dockerfiles/stages/2-opam-deps ./dockerfiles/stages/3-builder ./dockerfiles/stages/99-openmina-tail > ./dockerfiles/stages/merged
- name: publish-image
  image: plugins/docker
  settings:
    build_args_from_env:
    - MINA_BRANCH
    dockerfile: ./dockerfiles/stages/merged
    password:
      from_secret: docker_hub_password
    repo: openmina/mina
    tags:
    - ${DRONE_COMMIT_SHA:0:8}
    username:
      from_secret: docker_hub_username
---
kind: pipeline
name: build-image-custom
type: docker
clone:
  disable: true
trigger:
  event:
  - custom
steps:
- name: prepare-dockerfiles
  image: alpine/git
  commands:
  - '[[ ! -n "${MINA_IMAGE}" ]] && echo "Continue" || exit 78'
  - git clone $${MINA_REPO:-$${DRONE_REPO_LINK}} .
  - git checkout $${MINA_BRANCH:-$${DRONE_BRANCH}}
  - cat ./dockerfiles/stages/1-build-deps ./dockerfiles/stages/2-opam-deps ./dockerfiles/stages/3-builder ./dockerfiles/stages/99-openmina-tail > ./dockerfiles/stages/merged
- name: publish-image
  image: plugins/docker
  settings:
    build_args_from_env:
    - MINA_BRANCH
    - MINA_REPO
    dockerfile: ./dockerfiles/stages/merged
    password:
      from_secret: docker_hub_password
    repo: openmina/mina
    tags:
    - ${DRONE_COMMIT_SHA:0:8}
    username:
      from_secret: docker_hub_username

---
kind: pipeline
name: deploy-to-cluster
type: docker
trigger:
  event:
  - cron
  cron:
  - hourly
depends_on:
- build-image
environment:
  MINA_BRANCH: release/2.0.0
volumes:
- name: step-cache
  temp: {}
steps:
- name: prepare-deamon-json
  image: apteno/alpine-jq
  commands:
  - export CURRENT_TIMESTAMP=$(date -u -Iseconds)
  - echo $CURRENT_TIMESTAMP
  - tmpfile=$(mktemp);
  - cp helm/openmina-config/resources/daemon.json "$tmpfile"
  - jq --arg new_date $CURRENT_TIMESTAMP '.genesis.genesis_state_timestamp = $new_date' "$tmpfile" >./helm/openmina-config/resources/daemon.json
- name: prepare-frontend-port
  image: ellerbrock/alpine-bash-curl-ssl
  user: root
  volumes:
  - name: step-cache
    path: /step-cache
  commands:
  - bash -c "./scripts/drone-determine-cluster-port.sh /step-cache/fe_port"
- name: deploy-to-cluster
  image: alpine/helm:3.8.1
  environment:
    DRONE_KUBECONFIG:
      from_secret: k8s_config
  volumes:
  - name: step-cache
    path: /step-cache
  commands:
  - '[[ ! -n "${MINA_IMAGE}" ]] && export MINA_IMAGE=openmina/mina:$${DRONE_COMMIT_SHA:0:8} || export MINA_IMAGE=$${MINA_IMAGE}'
  - umask 0077
  - mkdir -p $HOME/.kube
  - echo "$DRONE_KUBECONFIG" > $HOME/.kube/config
  - helm upgrade seeds ./helm/seed-node --namespace $${NAMESPACE:-mina-daily-testnet} --set=frontend.nodePort=$(cat /step-cache/fe_port) --values=./helm/openmina-config/values.yaml --set=bpfDebugger.chainId=$(cat /step-cache/chain_id) --set-file=mina.runtimeConfig=./helm/openmina-config/resources/daemon.json --set=mina.image=$${MINA_IMAGE} --install
  - helm upgrade producers ./helm/block-producer --namespace $${NAMESPACE:-mina-daily-testnet} --set=frontend.nodePort=$(cat /step-cache/fe_port) --values=./helm/openmina-config/values.yaml --set=bpfDebugger.chainId=$(cat /step-cache/chain_id) --set-file=mina.runtimeConfig=./helm/openmina-config/resources/daemon.json --set=mina.image=$${MINA_IMAGE} --install --values=./helm/openmina-config/values/producer.yml
  - helm upgrade nodes ./helm/plain-node --namespace $${NAMESPACE:-mina-daily-testnet} --set=frontend.nodePort=$(cat /step-cache/fe_port) --values=./helm/openmina-config/values.yaml --set=bpfDebugger.chainId=$(cat /step-cache/chain_id) --set-file=mina.runtimeConfig=./helm/openmina-config/resources/daemon.json --set=mina.image=$${MINA_IMAGE} --install
  - helm upgrade snark-workers ./helm/snark-worker --namespace $${NAMESPACE:-mina-daily-testnet} --set=frontend.nodePort=$(cat /step-cache/fe_port) --values=./helm/openmina-config/values.yaml --set=bpfDebugger.chainId=$(cat /step-cache/chain_id) --set-file=mina.runtimeConfig=./helm/openmina-config/resources/daemon.json --set=mina.image=$${MINA_IMAGE} --install --values=./helm/openmina-config/values/snark-worker.yml --set-file=publicKey=./helm/openmina-config/resources/key-06.pub
  - helm upgrade frontend ./helm/openmina-frontend --namespace $${NAMESPACE:-mina-daily-testnet} --set=frontend.nodePort=$(cat /step-cache/fe_port) --values=./helm/openmina-config/values.yaml --set=bpfDebugger.chainId=$(cat /step-cache/chain_id) --set-file=mina.runtimeConfig=./helm/openmina-config/resources/daemon.json --set=mina.image=$${MINA_IMAGE} --install
- name: deployement-info
  image: alpine/helm:3.8.1
  volumes:
  - name: step-cache
    path: /step-cache
  commands:
  - 'echo "Frontend: http://1.k8.openmina.com:$(cat /step-cache/fe_port)"'
  - 'echo "Namespace: $${NAMESPACE:-mina-daily-testnet}"'

---
kind: pipeline
name: deploy-to-cluster-custom
type: docker
trigger:
  event:
  - custom
# depends_on:
# - build-image-custom
volumes:
- name: step-cache
  temp: {}
steps:

- name: clone
  image: drone/git
  settings:
    remote: https://github.com/openmina/openmina-testnet-k8s
    ref: refs/heads/ci-test
    path: testnet
    depth: 1
    recursive: true

- name: prepare-deamon-json
  image: busybox
  commands:
  - sed -e "s/\${TIMESTAMP}/$(date -u -Iseconds -d 00:00)/" testnet/resources/daemon.template.json > testnet/resources/daemon.json

- name: prepare-kubeconfig
  image: alpine/k8s:1.26.1
  environment:
    DRONE_KUBECONFIG:
      from_secret: k8s_config
    KUBECONFIG: /step-cache/kubeconfig
  volumes:
  - name: step-cache
    path: /step-cache
  commands:
  # - umask 0077
  - echo $${DRONE_KUBECONFIG} > $${KUBECONFIG}
  - kubectl config set-context --current --namespace $${NAMESPACE:-testnet-default}

- name: deploy-to-cluster
  image: alpine/k8s:1.26.1
  environment:
    KUBECONFIG: /step-cache/kubeconfig
  volumes:
  - name: step-cache
    path: /step-cache
  commands:
  #- '[[ ! -n "${MINA_IMAGE}" ]] && export MINA_IMAGE=openmina/mina:$${DRONE_COMMIT_SHA:0:8} || export MINA_IMAGE=$${MINA_IMAGE}'
  #- export MINA_IMAGE=TODO
  - testnet/deploy.sh delete --all
  - testnet/deploy.sh deploy --seeds
  - testnet/deploy.sh deploy --producers --snarkers --nodes --frontend

- name: deployement-info
  image: alpine/k8s:1.26.1
  volumes:
  - name: step-cache
    path: /step-cache
  commands:
  - 'echo "Frontend: http://1.k8.openmina.com:$(cat /step-cache/fe_port)"'
  - 'echo "Namespace: $${NAMESPACE:-mina-daily-testnet}"'

