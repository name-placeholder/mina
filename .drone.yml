---
kind: pipeline
name: deploy-to-cluster-custom
type: docker
clone:
  disable: true
trigger:
  event:
  - custom
# depends_on:
# - build-image-custom
volumes:
- name: step-cache
  temp: {}
steps:

- name: clone-openmina-testnet-k8s
  image: drone/git
  settings:
    remote: https://github.com/openmina/openmina-testnet-k8s
    ref: refs/heads/ci-test
    path: ./testnet
    depth: 1
    recursive: true

- name: debug
  image: busybox
  comands:
  - ls -l .

- name: prepare-deamon-json
  image: busybox
  commands:
  - sed -e "s/\${TIMESTAMP}/$(date -u -Iseconds -d 00:00)/" testnet/resources/daemon.template.json > testnet/resources/daemon.json

- name: prepare-kubeconfig
  image: alpine/k8s:1.26.1
  environment:
    DRONE_KUBECONFIG:
      from_secret: k8s_config
    KUBECONFIG: /step-cache/kubeconfig
  volumes:
  - name: step-cache
    path: /step-cache
  commands:
  # - umask 0077
  - echo $${DRONE_KUBECONFIG} > $${KUBECONFIG}
  - kubectl config set-context --current --namespace $${NAMESPACE:-testnet-default}

- name: deploy-to-cluster
  image: alpine/k8s:1.26.1
  environment:
    KUBECONFIG: /step-cache/kubeconfig
  volumes:
  - name: step-cache
    path: /step-cache
  commands:
  #- '[[ ! -n "${MINA_IMAGE}" ]] && export MINA_IMAGE=openmina/mina:$${DRONE_COMMIT_SHA:0:8} || export MINA_IMAGE=$${MINA_IMAGE}'
  #- export MINA_IMAGE=TODO
  - testnet/deploy.sh delete --all
  - testnet/deploy.sh deploy --seeds
  - testnet/deploy.sh deploy --producers --snarkers --nodes --frontend

- name: deployement-info
  image: alpine/k8s:1.26.1
  volumes:
  - name: step-cache
    path: /step-cache
  commands:
  - 'echo "Frontend: http://1.k8.openmina.com:$(cat /step-cache/fe_port)"'
  - 'echo "Namespace: $${NAMESPACE:-mina-daily-testnet}"'

