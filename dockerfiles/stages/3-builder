#################################################################################################
# The "builder" Stage
# - builds mina and any other binaries required to run rosetta
# - should not include any data related to joining a specific network, only the node software itself
#################################################################################################
FROM opam-deps AS builder

# Use --build-arg "DUNE_PROFILE=dev" to build a dev image or for CI
ARG DUNE_PROFILE=devnet

# branch to checkout on first clone (this will be the only available branch in the container)
# can also be a tagged release
ARG MINA_BRANCH=compatible

# repo to checkout the branch from
ARG MINA_REPO=https://github.com/MinaProtocol/mina

# location of repo used for pins and external package commits
ARG MINA_DIR=mina

ENV PATH "$PATH:/usr/lib/go/bin:$HOME/.cargo/bin"

# --- Shallow Clone the Mina repo
# Delete any previous clones of the mina repo and then clone into an empty directory
RUN cd $HOME && rm -rf $HOME/${MINA_DIR} \
  && git clone \
  -b "${MINA_BRANCH}" \
  --depth 1 \
  --shallow-submodules \
  --recurse-submodules \
  ${MINA_REPO} ${HOME}/${MINA_DIR}
# Set the working directory to the cloned mina repo
WORKDIR $HOME/${MINA_DIR}
# Create a directory for compiled outputs
RUN mkdir ${HOME}/app

# --- Build libp2p_helper
RUN make libp2p_helper \
   && mv src/app/libp2p_helper/result/bin/libp2p_helper ${HOME}/app/libp2p_helper

# --- Make rosetta-crucial components and the generate_keypair tool
RUN eval $(opam config env) \
  && dune build --profile=${DUNE_PROFILE} \
    src/app/cli/src/mina_testnet_signatures.exe \
  && mv _build/default/src/app/cli/src/mina_testnet_signatures.exe $HOME/app/mina-dev \
  && rm -rf _build

# --- Clear go module caches to make the container smaller
RUN cd src/app/libp2p_helper/src/libp2p_helper \
  && go clean --cache --modcache --testcache -r
